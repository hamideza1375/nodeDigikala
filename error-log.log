{"level":"error","message":"error.message"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"aaaa"}
{"level":"error","message":"PaymentModel.daleteMany is not a function"}
{"level":"error","message":"Regular expression is invalid: missing terminating ] for character class"}
{"level":"error","message":"Regular expression is invalid: missing terminating ] for character class"}
{"level":"error","message":"lastPayment.id is not a function"}
{"level":"error","message":"lastPayment.id is not a function"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cast to ObjectID failed for value \"a\" at path \"_id\" for model \"PaymentModel\""}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Parameter \"obj\" to Document() must be an object, got true"}
{"level":"error","message":"Parameter \"obj\" to Document() must be an object, got true"}
{"level":"error","message":"Parameter \"obj\" to Document() must be an object, got 63fde81ad779c22f80c9aa3d"}
{"level":"error","message":"Cast to Can't use $nen with Number. failed for value \"undefined\" at path \"undefined\" for model \"PaymentModel\""}
{"level":"error","message":"unknown top level operator: $set. If you have a field name that starts with a '$' symbol, consider using $getField or $setField."}
{"level":"error","message":"unknown top level operator: $set. If you have a field name that starts with a '$' symbol, consider using $getField or $setField."}
{"level":"error","message":"Can't use $set with Array."}
{"level":"error","message":"Can't use $set with Array."}
{"level":"error"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: Cannot create field 'name' in element {childItemsId: [ { _id: ObjectId('63fe054d2b67d226ac46bb35'), name: \"n122\", test: \"t122\" }, { _id: ObjectId('63fe054d2b67d226ac46bb34'), name: \"n222\", test: \"t222\" }, { _id: ObjectId('63fe054d2b67d226ac46bb33'), name: \"n222\", test: \"t222\" } ]}"}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: Cannot create field 'name' in element {childItemsId: [ { _id: ObjectId('63fe054d2b67d226ac46bb35'), name: \"n122\", test: \"t122\" }, { _id: ObjectId('63fe054d2b67d226ac46bb34'), name: \"n222\", test: \"t222\" }, { _id: ObjectId('63fe054d2b67d226ac46bb33'), name: \"n222\", test: \"t222\" } ]}"}
{"level":"error","message":"PaymentModel.findAndUpdate is not a function"}
{"level":"error","message":"PaymentModel.findOneAndِRemove is not a function"}
{"level":"error","message":"PaymentModel.findOneAndِDelete is not a function"}
{"level":"error","message":"PaymentModel.findOneAndِDelete is not a function"}
{"level":"error","message":"Cannot specify both new=true and remove=true; 'remove' always returns the deleted document"}
{"level":"error","message":"Cannot specify both new=true and remove=true; 'remove' always returns the deleted document"}
{"level":"error","message":"Cannot specify both new=true and remove=true; 'remove' always returns the deleted document"}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: The positional operator did not find the match needed from the query."}
{"level":"error","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField."}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: The positional operator did not find the match needed from the query."}
{"level":"error","message":"Cannot read properties of undefined (reading 'id')"}
{"level":"error","message":"Cannot read properties of null (reading 'remove')"}
{"level":"error","message":"Cast to ObjectId failed for value \"9\" at path \"_id\" for model \"PaymentModel\""}
{"level":"error","message":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)"}
{"level":"error","message":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)"}
{"level":"error","message":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)"}
{"level":"error","message":"Schema hasn't been registered for model \"user\".\nUse mongoose.model(name, schema)"}
{"level":"error","message":"res is not defined"}
{"level":"error","message":"The positional operator did not find the match needed from the query."}
{"level":"error","message":"PaymentModel.delete is not a function"}
{"level":"error","message":"PaymentModel.delete is not a function"}
{"level":"error","message":"PaymentModel.delete is not a function"}
{"level":"error","message":"The positional operator did not find the match needed from the query."}
{"level":"error","message":"Can't use $elemMatchs with Array."}
{"level":"error","message":"$all needs an array"}
{"level":"error","message":"Query filter must be an object, got an array "}
{"level":"error","message":"Cannot read properties of undefined (reading 'find')"}
{"level":"error","message":""}
{"level":"error"}
{"level":"error","message":"path must be a string to res.sendFile"}
